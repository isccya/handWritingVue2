{"version":3,"file":"vue.js","sources":["../src/observe/array.js","../src/observe/dep.js","../src/observe/index.js","../src/state.js","../src/compiler/parse.js","../src/compiler/index.js","../src/observe/watcher.js","../src/vdom/index.js","../src/lifecycle.js","../src/init.js","../src/index.js"],"sourcesContent":["// 我们希望重写数组上的方法\r\n\r\n\r\n\r\nlet oldArrayProto = Array.prototype //获取数组的原型\r\n\r\nexport let newArrayProto = Object.create(oldArrayProto)\r\n\r\nlet methods = [\r\n    'push',\r\n    'pop',\r\n    'shift',\r\n    'unshift',\r\n    'reverse',\r\n    'sort',\r\n    'splice',\r\n]\r\n\r\nmethods.forEach((method) => {\r\n    newArrayProto[method] = function (...args) { //这里重写了数组的方法\r\n        // console.log(method);\r\n        const result = oldArrayProto[method].call(this, ...args) //内部调用原来的方法\r\n        let inserted ;\r\n        let ob = this.__ob__;\r\n        switch(method){\r\n            case 'push' :\r\n            case 'unshift' :\r\n                inserted = args\r\n                break;\r\n            case 'splice' :\r\n                inserted = args.slice(2)\r\n            default:\r\n                break;\r\n        }\r\n        if(inserted){\r\n            ob.observeArray(inserted);\r\n        }\r\n\r\n        return result\r\n    }\r\n})\r\n// console.log(newArrayProto);","let id = 0\r\n/**\r\n * dep每个属性都有,目的是收集watcher\r\n * \r\n * */\r\nclass Dep {\r\n    constructor() {\r\n        this.id = id++ //属性的dep收集watcher\r\n        this.subs = [] //存放属性对应的watcher有哪些\r\n    }\r\n    depend() {\r\n        // 不希望重复记录watcher\r\n        Dep.target.addDep(this) //让watcher记住dep\r\n\r\n        // dep和watcher是一个多对多关系\r\n    }\r\n    addSub(watcher) {\r\n        this.subs.push(watcher)\r\n    }\r\n    nodify() {\r\n        this.subs.forEach(watcher => watcher.update()) //告诉watcher要更新了\r\n    }\r\n}\r\n\r\nDep.target = null\r\n\r\n\r\nexport default Dep;","import { newArrayProto } from \"./array\"\r\nimport Dep from \"./dep\"\r\n\r\nclass Observer {\r\n    constructor(data) {\r\n        // Object,defineProperty只能劫持已经存在的属性\r\n        Object.defineProperty(data,'__ob__',{//给数据添加了一个标识,如果数据上有_ob_说明这个数据被观测过了\r\n            value:this,\r\n            enumerable:false,//将下划线ob变成不可枚举(循环时候无法获取)\r\n        })\r\n        // data._ob_ = this; \r\n        if (Array.isArray(data)) { //如果代理的数据是数组,不能给数组每一个索引都作响应式,很少有arr[876]这样的需求,只对数组方法里面做响应式,还有数组里面的对象作响应式\r\n            data.__proto__ = newArrayProto //保留数组原有的特性,并且可以重写部分方法\r\n            this.observeArray(data) //如果数组中存放的是对象,可以监测到对象的变化\r\n        } else {\r\n            this.walk(data)\r\n        }   \r\n    }\r\n    walk(data) { // 循环对象,对属性依次劫持\r\n        Object.keys(data).forEach(key => defineReactive(data, key, data[key]))\r\n    }\r\n    observeArray(data) {\r\n        data.forEach(item => observe(item)) //把数组里的对象都变成响应式\r\n    }\r\n}\r\n\r\n// !!!最终定义对象属性为响应式的方法!!!\r\nexport function defineReactive(target, key, value) { //闭包 属性劫持\r\n    observe(value) //递归,值是对象,也对对象内部的值做劫持\r\n    let dep = new Dep() //每一个属性都有dep\r\n    Object.defineProperty(target, key, {\r\n        // ***在数据的get方法进行依赖收集,访问了数据===>组件依赖这些数据***\r\n        get() {\r\n            if(Dep.target){\r\n                dep.depend();//让这个属性记住当前的watcher\r\n            }\r\n            return value\r\n        },\r\n        // ***在数据的set方法进行依赖追踪,数据修改===>组件更新***\r\n        set(newValue) {\r\n            if (newValue === value) return\r\n            observe(newValue)\r\n            value = newValue\r\n            dep.nodify() //通知更新\r\n        }\r\n    })\r\n}\r\n\r\nexport function observe(data) {\r\n    // 对这个对象劫持\r\n    if (typeof data !== 'object' || data === null) {\r\n        return; //只对对象劫持\r\n    }\r\n    if(data._ob_ instanceof Observer){//说明这个对象被代理过了\r\n        return data._ob_  \r\n    } \r\n    return new Observer(data);\r\n}","import { observe } from './observe/index.js'\r\nexport function initState(vm) {\r\n    const opts = vm.$options;\r\n    if (opts.data) {\r\n        initData(vm);\r\n    }\r\n}\r\n\r\n// 解决访问vm属性要vm_data.name这种写法,直接vm.name\r\nfunction proxy(vm,target, key) {\r\n    Object.defineProperty(vm,key,{ //vm.name\r\n        get(){\r\n            return vm[target][key] //vm._data.name\r\n        },\r\n        set(newValue){\r\n            vm[target][key] = newValue\r\n        }\r\n    })\r\n}\r\n\r\nfunction initData(vm) {\r\n    let data = vm.$options.data; //data可能是函数,也可能是对象\r\n    typeof data === 'function' ? data.call(vm) : data //data是用户返回的对象\r\n\r\n    vm._data = data //将返回的对象放到了_data上\r\n    // 对数据进行劫持 vue2里采用了一个api defineProperty\r\n    observe(data)\r\n\r\n    for (let key in data) {\r\n        proxy(vm, '_data', key)\r\n    }\r\n}","/**\r\n * 获取模板字符串后,从头到尾先解析开始标签,获得其标签名,属性,和结束标签和标签文本内容.模板字符串不断裁剪到为空.\r\n * 根据开始标签,文本,结束标签创建AST节点,注意根节点的判断,以及父子节点关系,通过一个栈数据结构判断父子节点\r\n * 开始标签会进栈,结束标签出栈,文本会直接作为当前父节点的属性,栈结尾的元素即为当前的要进栈元素的***父节点***\r\n * 最终形成AST语法树.每一层是一个节点,有父节点,子节点,和自身属性.\r\n * \r\n * */ \r\n\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 他匹配到的分组是一个 标签名  <xxx 匹配到的是开始 标签的名字\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`);  // 匹配的是</xxxx>  最终匹配到的分组就是结束标签的名字\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;  // 匹配属性\r\n// 第一个分组就是属性的key value 就是 分组3/分组4/分组五\r\nconst startTagClose = /^\\s*(\\/?)>/;  // <div> <br/>\r\n\r\n// vue3 采用的不是使用正则\r\n// 对模板进行编译处理  \r\nexport function parseHTML(html) {\r\n\r\n    const ELEMENT_TYPE = 1;\r\n    const TEXT_TYPE = 3;\r\n    const stack = []; // 用于存放元素的\r\n    let currentParent; // 指向的是栈中的最后一个\r\n    let root;\r\n\r\n    function createASTElement(tag, attrs) {\r\n        return {\r\n            tag,\r\n            type: ELEMENT_TYPE,\r\n            children:[],\r\n            attrs,\r\n            parent: null\r\n        }\r\n    }\r\n\r\n    function start(tag, attrs) {\r\n        let node = createASTElement(tag, attrs) //创建一个ast节点\r\n        if (!root) { //没有根节点,当前元素就是根节点\r\n            root = node\r\n        }\r\n        if (currentParent) {\r\n            node.parent = currentParent //子知父\r\n            currentParent.children.push(node) //父知子\r\n        }\r\n        stack.push(node)\r\n        currentParent = node //父节点为栈中最后一个元素\r\n    }\r\n\r\n    function chars(text) { //文本放到当前指向的节点\r\n        text = text.replace(/\\s/g,''); \r\n        text && currentParent.children.push({\r\n            type: TEXT_TYPE,\r\n            text,\r\n            parent:currentParent\r\n        })\r\n\r\n    }\r\n\r\n    function end(tag) {\r\n        stack.pop() //弹出最后一个\r\n        currentParent = stack[stack.length - 1]\r\n\r\n    }\r\n\r\n    // 模板解析完多少,就前进多少\r\n    function advance(n) {\r\n        html = html.substring(n)\r\n    }\r\n\r\n    // 解析开始标签及其里面的属性\r\n    function parseStartTag() {\r\n        const start = html.match(startTagOpen)\r\n        // 1.匹配到开始标签\r\n        if (start) {\r\n            const match = {\r\n                tagName: start[1], //标签名\r\n                attrs: []\r\n            }\r\n            advance(start[0].length);\r\n            // 2.如果不是开始标签的结束,就一直匹配属性,把属性值放入match.attrs中\r\n            let attr, end;\r\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n                advance(attr[0].length)\r\n                match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] } || true)\r\n            }\r\n            // 3.匹配到结束符号\r\n            if (end) {\r\n                advance(end[0].length)\r\n            }\r\n            return match\r\n        }\r\n        return false //不是开始标签\r\n    }\r\n\r\n\r\n    while (html) {\r\n        // 如果textEnd 为0 说明是一个开始标签或者结束标签\r\n        // 如果textEnd > 0说明就是文本的结束位置\r\n        let textEnd = html.indexOf('<');  // 如果indexOf中的索引是0 则说明是个标签\r\n        if (textEnd === 0) {\r\n            const startTagMatch = parseStartTag() //开始标签的匹配\r\n            if (startTagMatch) {\r\n                start(startTagMatch.tagName, startTagMatch.attrs)\r\n                continue\r\n            }\r\n            let endTagMatch = html.match(endTag)\r\n            if (endTagMatch) {\r\n                end(endTagMatch[1])\r\n                advance(endTagMatch[0].length)\r\n                continue\r\n            }\r\n\r\n        }\r\n        if (textEnd > 0) {\r\n            let text = html.substring(0, textEnd) //文本内容\r\n            if (text) {\r\n                chars(text)\r\n                advance(text.length) //解析到的文本\r\n            }\r\n        }\r\n    }\r\n    return root;\r\n}","import { parseHTML } from \"./parse\";\r\n\r\nfunction genProps(attrs) {\r\n    let str = ''// {name,value}\r\n    for (let i = 0; i < attrs.length; i++) {\r\n        let attr = attrs[i];\r\n        if (attr.name === 'style') {\r\n            // color:red;background:red => {color:'red'}\r\n            let obj = {};\r\n            attr.value.split(';').forEach(item => { // qs 库\r\n                let [key, value] = item.split(':');\r\n                obj[key] = value;\r\n            });\r\n            attr.value = obj\r\n        }\r\n        str += `${attr.name}:${JSON.stringify(attr.value)},` // a:b,c:d,\r\n    }\r\n    return `{${str.slice(0, -1)}}`\r\n}\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; // {{ asdsadsa }}  匹配到的内容就是我们表达式的变量\r\nfunction gen(node) {\r\n    if (node.type === 1) {\r\n        return codegen(node);\r\n    } else {\r\n        // 文本\r\n        let text = node.text\r\n        if (!defaultTagRE.test(text)) {\r\n            return `_v(${JSON.stringify(text)})`\r\n        } else {\r\n            //_v( _s(name)+'hello' + _s(name))\r\n            let tokens = [];\r\n            let match;\r\n            defaultTagRE.lastIndex = 0;\r\n            let lastIndex = 0;\r\n            // split\r\n            while (match = defaultTagRE.exec(text)) {\r\n                let index = match.index; // 匹配的位置  {{name}} hello  {{name}} hello \r\n                if (index > lastIndex) {\r\n                    tokens.push(JSON.stringify(text.slice(lastIndex, index)))\r\n                }\r\n                tokens.push(`_s(${match[1].trim()})`)\r\n                lastIndex = index + match[0].length\r\n            }\r\n            if (lastIndex < text.length) {\r\n                tokens.push(JSON.stringify(text.slice(lastIndex)))\r\n            }\r\n            return `_v(${tokens.join('+')})`\r\n        }\r\n    }\r\n}\r\nfunction genChildren(children) {\r\n    return children.map(child => gen(child)).join(',')\r\n}\r\nfunction codegen(ast) {\r\n    let children = genChildren(ast.children);\r\n    let code = (`_c('${ast.tag}',${ast.attrs.length > 0 ? genProps(ast.attrs) : 'null'\r\n        }${ast.children.length ? `,${children}` : ''\r\n        })`)\r\n\r\n    return code;\r\n}\r\n\r\nexport function compileToFunction(template) {\r\n\r\n    // 1.将template转换为AST语法树\r\n    let ast = parseHTML(template)\r\n    \r\n    // 2.生成render方法(render方法执行后返回的是虚拟DOM)\r\n    let code = codegen(ast);\r\n\r\n    // 模板引擎的实现原理 就是 with  + new Function \r\n\r\n\r\n    code = `with(this){return ${code}}`\r\n    const render = new Function(code)\r\n    return render\r\n}","import Dep from \"./dep\";\r\n/**\r\n * 每个组件对应一个watcher,页面渲染的逻辑放到watcher里\r\n * 每个属性有一个dep (属性是被观察者), watcher是观察者(属性变化了会通知观察者来更新)\r\n * \r\n * 需要给每个数据增加一个dep,目的就是收集watcher\r\n    一个组件有多个数据(n个数据对应一个视图) n个dep对应一个watcher\r\n    一个数据对应多个组件\r\n    多对多 \r\n * */\r\n\r\n\r\n/**\r\n *  nextTick原理???\r\n * 1.数据更新后不会立刻更新页面,而是异步更新.\r\n * 2.数据更新会触发依赖这个数据的组件的watcher进行更新,会用一个队列缓冲一个事件循环中所有变更的数据,保存对应的watcher\r\n * 3.nexttick会把队列中watcher的更新操作放到异步任务中,采用了优雅降级的方式,\r\n * 原生的Promise.then、MutationObserver和setImmediate，上述三个都不支持最后使用setTimeout\r\n * 4.异步任务执行完后,清空队列.如果要在页面更新后访问DOM的话,也要用nextTick方法,相当于在watcher更新的异步任务后面排一个异步任务\r\n * \r\n * */ \r\nlet id = 0\r\n\r\n\r\n\r\n\r\nclass Watcher { //不同组件有不同的watcher ,目前只有根组件有\r\n    constructor(vm, fn, options) {\r\n        this.id = id++\r\n        this.renderWatcher = options //是一个渲染过程\r\n        this.getter = fn; // getter意味着调用这个函数可以发生取值操作\r\n        this.deps = []; // 后续 我们实现计算属性,和一些清理工作需要\r\n        this.depsId = new Set(); //\r\n        this.get()\r\n    }\r\n    addDep(dep) { // 一个组件对应多个属性 重复的属性也不用记录\r\n        let id = dep.id\r\n        if (!this.depsId.has(id)) {\r\n            this.deps.push(id)\r\n            this.depsId.add(id)\r\n            dep.addSub(this) //watcher已经记住dep并且去重,此时让dep记住watcher\r\n        }\r\n    }\r\n    get() {\r\n        // 用不到的数据就不会收集\r\n        Dep.target = this //把当前渲染组件的watcher放在全局上,组件渲染会访问数据,数据里get方法会把把该组件添加到自己的dep中\r\n        this.getter() //会去vm上取值 vm._update(vm._render) 取name 和age\r\n        Dep.target = null // 渲染完之后清空\r\n    }\r\n    update() {\r\n        queueWatcher(this) //把当前watcher暂存,避免一个数据修改就更新整个页面\r\n        // this.get()\r\n    }\r\n    run() {\r\n        this.get()\r\n    }\r\n}\r\n\r\nlet queue = []\r\nlet has = {} //用对象去重watcher\r\nlet pending = false //防抖\r\n\r\nfunction flushSchedulerQueue() {\r\n    let flushQueue = queue.slice(0);\r\n    queue = [];\r\n    has = {};\r\n    pending = false;\r\n    flushQueue.forEach(q => q.run()); // 在刷新的过程中可能还有新的watcher，重新放到queue中\r\n}\r\n\r\nfunction queueWatcher(watcher) {\r\n    const id = watcher.id\r\n    if (!has[id]) {\r\n        queue.push(watcher)\r\n        has[id] = true\r\n        // 不管update执行多少次,但是最终只刷新一轮\r\n        if (!pending) {\r\n            nextTick(flushSchedulerQueue, 0) //同步任务里面最后一次赋值(同步前面可能赋值多次)后,异步任务再执行更新,所以是批处理\r\n            pending = true\r\n        }\r\n    }\r\n}\r\n// 又来一次这种方法,多个执行合成一个:一个变量,开个异步\r\n// 控制更新顺序\r\nlet callbacks = []\r\nlet waiting = false\r\nfunction flushCallbacks() {\r\n    let cbs = callbacks.slice(0)\r\n    waiting = false\r\n    callbacks = []\r\n    cbs.forEach(cb => cb())\r\n}\r\n// nextTick不是创建了异步任务,而是将异步任务维护到队列中\r\nexport function nextTick(cb) {\r\n    callbacks.push(cb)\r\n    if (!waiting) {\r\n        Promise.resolve().then(flushCallbacks)\r\n        waiting = true\r\n    }\r\n}\r\n\r\n\r\nexport default Watcher\r\n\r\n","/**\r\n * 这个文件是创建虚拟节点\r\n * */ \r\n\r\n// h()  _c()\r\nexport function createElementVNode(vm, tag, data, ...children) { //创建元素虚拟节点\r\n    if (data == null) {\r\n        data = {}\r\n    }\r\n    let key = data.key;\r\n    if (key) {\r\n        delete data.key\r\n    }\r\n    return vnode(vm, tag, key, data, children);\r\n}\r\n// _v();\r\nexport function createTextVNode(vm, text) { //创建文本虚拟节点\r\n    return vnode(vm, undefined, undefined, undefined, undefined, text);\r\n}\r\n// ast一样吗？ ast做的是语法层面的转化 他描述的是语法本身 (可以描述js css html)\r\n// 我们的虚拟dom 是描述的dom元素，可以增加一些自定义属性  (描述dom的)\r\nfunction vnode(vm, tag, key, data, children, text) {\r\n    return {\r\n        vm,\r\n        tag,\r\n        key,\r\n        data,\r\n        children,\r\n        text\r\n        // ....\r\n    }\r\n}","import Watcher from \"./observe/watcher\";\nimport { createElementVNode, createTextVNode } from \"./vdom\";\n\n// 创建真实DOM\nfunction createElm(vnode){\n    let {tag,data,children,text} = vnode;\n    if(typeof tag == 'string'){ //元素节点\n        vnode.el = document.createElement(tag)\n        patchProps(vnode.el,data);\n        children.forEach(child => {\n            vnode.el.appendChild(createElm(child))\n        });\n    }else{ //文本节点\n        vnode.el = document.createTextNode(text)\n    }\n    return vnode.el;\n}\n// 创建真实DOM中的元素节点时候添加元素属性\nfunction patchProps(el,props){\n    for(let key in props){\n        if(key === 'style'){\n            for(let styleName in props.style){\n                el.style[styleName] = props.style[styleName]\n            }\n        }else{\n            el.setAttribute(key,props[key])\n        }\n    }\n}\n    \n// 写的是初渲染过程\nfunction patch(oldVnode,vnode){\n    const isRealElement = oldVnode.nodeType\n    if(isRealElement){\n        const elm = oldVnode; //获取真实DOM\n        const parentElm = elm.parentNode //拿到父元素\n        const newElm = createElm(vnode) //创建新DOM\n        parentElm.insertBefore(newElm,elm.nextSibling) //替换\n        parentElm.removeChild(elm) //删除老节点\n        return newElm\n    }else{\n        // diff算法\n    }\n}\n\nexport function initLifeCycle(Vue) {\n     // 将vnode转化成真实dom\n    Vue.prototype._update = function (vnode) {\n        const vm = this\n        const el = vm.$el\n    //patch方法里面把虚拟节点转换为真实节点,并把模板中替换旧节点\n    vm.$el = patch(el,vnode)\n    }\n\n    // _c('div',{},...children)\n    Vue.prototype._c = function () {\n        return createElementVNode(this, ...arguments)\n    }\n    // _v(text)\n    Vue.prototype._v = function () {\n        return createTextVNode(this, ...arguments)\n    }\n    Vue.prototype._s = function (value) {\n        if (typeof value !== 'object') return value\n        return JSON.stringify(value)\n    }\n\n\n    Vue.prototype._render = function () {\n        // 渲染时候会去实例取值,就将属性和视图绑定在一起\n        const vm = this;\n        return this.$options.render.call(this); // 通过ast语法转义后生成的render方法\n    }\n}\n\n\n\n//挂载\nexport function mountComponent(vm, el) { \n    vm.$el = el // 这里的el 是通过querySelector处理过的\n\n    // 1.调用render方法产生虚拟节点 虚拟DOM\n    const updateComponent = ()=>{\n        vm._update(vm._render());\n    }\n    new Watcher(vm,updateComponent,true) //true用于标识是一个渲染watcher\n\n    // 2.根据虚拟DOM产生真实DOM \n\n    // 3.插入到el元素中\n\n}\n// vue核心流程 1） 创造了响应式数据  2） 模板转换成ast语法树  \n// 3) 将ast语法树转换了render函数 4) 后续每次数据更新可以只执行render函数 (无需再次执行ast转化的过程)\n// render函数会去产生虚拟节点（使用响应式数据）\n// 根据生成的虚拟节点创造真实的DOM\n\n","import { initState } from './state'\r\nimport { compileToFunction } from './compiler';\r\nimport { mountComponent } from './lifecycle'\r\n\r\nexport function initMixin(Vue) { //给Vue添加init方法\r\n    Vue.prototype._init = function (options) { //初始化操作\r\n        const vm = this;\r\n        vm.$options = options; //将用户选项挂载到实例上\r\n\r\n        // 初始化状态\r\n        initState(vm)\r\n        if (options.el) {\r\n            vm.$mount(options.el) //实现数据的挂载\r\n        }\r\n    }\r\n    Vue.prototype.$mount = function (el) {\r\n        const vm = this\r\n        el = document.querySelector(el)\r\n        let ops = vm.$options\r\n        // render==>template==>el.outerHTML\r\n        if (!ops.render) { //先查找一下有没有写render函数\r\n            let template; //没有render看一下是否写了template,没写template采用外部的template\r\n            if (!ops.template && el) { //没有写模板,但写了el\r\n                template = el.outerHTML\r\n            } else {\r\n                if (el) {\r\n                    template = ops.template //如果有el,则采用模板内容\r\n                }\r\n            }\r\n            // 写了template就用写了的template\r\n            if (template) {\r\n                // 这里需要对模板进行编译,即生成AST树,根据AST树代码生成渲染函数.\r\n                const render = compileToFunction(template);\r\n                ops.render = render\r\n            }\r\n        }\r\n        mountComponent(vm, el); //组件的挂载\r\n\r\n    }\r\n}\r\n","import { initMixin } from \"./init\"\r\nimport { initLifeCycle } from \"./lifecycle\";\r\nimport { nextTick } from \"./observe/watcher\";\r\n\r\n\r\nfunction Vue(options){ //options就是用户的选项,包括data,computed等等\r\n    this._init(options)\r\n}\r\n        \r\ninitMixin(Vue) //给vue对象扩展了init方法\r\ninitLifeCycle(Vue);\r\nVue.prototype.$nextTick = nextTick\r\n\r\n\r\nexport default Vue"],"names":["oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","forEach","method","_oldArrayProto$method","_len","arguments","length","args","_key","result","call","apply","concat","inserted","ob","__ob__","slice","observeArray","id","Dep","_classCallCheck","subs","_createClass","key","value","depend","target","addDep","addSub","watcher","push","nodify","update","Observer","data","defineProperty","enumerable","isArray","__proto__","walk","keys","defineReactive","item","observe","dep","get","set","newValue","_typeof","_ob_","initState","vm","opts","$options","initData","proxy","_data","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","currentParent","root","createASTElement","tag","attrs","type","children","parent","start","node","chars","text","replace","end","pop","advance","n","substring","parseStartTag","match","tagName","attr","name","textEnd","indexOf","startTagMatch","endTagMatch","genProps","str","_loop","i","obj","split","_item$split","_item$split2","_slicedToArray","JSON","stringify","defaultTagRE","gen","codegen","test","tokens","lastIndex","exec","index","trim","join","genChildren","map","child","ast","code","compileToFunction","template","render","Function","Watcher","fn","options","renderWatcher","getter","deps","depsId","Set","has","add","queueWatcher","run","queue","pending","flushSchedulerQueue","flushQueue","q","nextTick","callbacks","waiting","flushCallbacks","cbs","cb","Promise","resolve","then","createElementVNode","vnode","createTextVNode","undefined","createElm","el","document","createElement","patchProps","appendChild","createTextNode","props","styleName","style","setAttribute","patch","oldVnode","isRealElement","nodeType","elm","parentElm","parentNode","newElm","insertBefore","nextSibling","removeChild","initLifeCycle","Vue","_update","$el","_c","_v","_s","_render","mountComponent","updateComponent","initMixin","_init","$mount","querySelector","ops","outerHTML","$nextTick"],"mappings":"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"}