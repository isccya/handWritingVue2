{"version":3,"file":"vue.js","sources":["../src/utils.js","../src/GlobalAPI.js","../src/observe/dep.js","../src/observe/array.js","../src/observe/index.js","../src/observe/watcher.js","../src/state.js","../src/compiler/parse.js","../src/compiler/index.js","../src/vdom/index.js","../src/vdom/patch.js","../src/lifecycle.js","../src/init.js","../src/index.js"],"sourcesContent":[" // 静态方法 \r\n const strats = {};\r\n const LIFECYCLE = [\r\n     'beforeCreate',\r\n     'created'\r\n ]\r\n//  生命周期的策略模式.返回一个数组,父的在前.\r\n LIFECYCLE.forEach(hook => {\r\n     strats[hook] = function (p, c) {\r\n         if (c) {\r\n             if (p) { //如果儿子有,父亲有,拼在一起\r\n                 return p.concat(c)\r\n             } else {\r\n                 return [c]\r\n             }\r\n         } else {\r\n             return p //如果没有儿子,则用父亲的即可\r\n         }\r\n     }\r\n })\r\n\r\n// 组件的策略模式.也是优先使用孩子组件,通过原型访问父组件.\r\n strats.components = function(parentVal,childVal){\r\n    const res = Object.create(parentVal)\r\n    if(childVal){\r\n        for(let key in childVal){\r\n            res[key] = childVal[key] //返回的是构造的对象,可以拿到父亲原型上的属性,并且将儿子拷贝到对象上.(!!组件会形成原型的层层嵌套!!)\r\n        }\r\n    }\r\n    return res\r\n }\r\n\r\nexport function mergeOptions(parent, child) {\r\n    const options = {}\r\n    for (let key in parent) {\r\n        mergeField(key)\r\n    }\r\n    for (let key in child) {\r\n        if (!parent.hasOwnProperty(key)) {\r\n            mergeField(key)\r\n        }\r\n    }\r\n    // mergeField优先使用孩子属性.\r\n    function mergeField(key) {\r\n        // 用策略模式减少if else\r\n        if (strats[key]) {\r\n            options[key] = strats[key](parent[key], child[key])\r\n        } else {\r\n            options[key] = child[key] || parent[key]\r\n        }\r\n    }\r\n    return options\r\n}\r\n","import { mergeOptions } from \"./utils\";\r\n\r\nexport function initGlobalAPI(Vue) {\r\n   \r\n\r\n    Vue.options = {\r\n        _base : Vue\r\n    } //上面是合并后的配置\r\n\r\n    // 混入的选项放在Vue.options上.\r\n    Vue.mixin = function (mixin) {\r\n        // 将用户mixin的选项和全局options进行合并(这里this就是构造函数Vue)\r\n        this.options = mergeOptions(this.options, mixin)\r\n        return this\r\n    }\r\n\r\n    Vue.extend = function(options){\r\n        // 根据用户参数返回一个Vue的子类的构造函数.(extend时候可以传参数)\r\n        function Sub(options = {}){ //最终使用一个组件,就是new一个实例\r\n            this._init(options) //默认对子类初始化操作\r\n        }\r\n        Sub.prototype = Object.create(Vue.prototype) // VueComponent.prototype.__proto__ === Vue.prototype,让组件实例对象（vc）可以访问到 Vue 原型上的属性、方法\r\n        Sub.prototype.constructor = Sub\r\n\r\n        // 将用户传递的参数和全局Vue.options来合并\r\n        Sub.options = mergeOptions(Vue.options,options) //保存用户的选项到组件实例上\r\n        return Sub;\r\n    }\r\n\r\n\r\n    Vue.options.components ={} // 全局组件存储的位置.\r\n    Vue.component = function (id,definition){ //创建全局组件\r\n\r\n        // 如果definition已经是一个函数,证明用户自己调用了Vue.extend\r\n\r\n        definition = typeof definition === 'function' ? definition : Vue.extend(definition)\r\n        Vue.options.components[id] = definition\r\n    }\r\n}","let id = 0\r\n/**\r\n * dep每个属性都有,目的是收集watcher,是在闭包上的私有属性.无法手动访问dep对象\r\n * 每个对象也有,在对象__ob__上,这个属性就是observe实例.dep是在observe实例上\r\n * \r\n * */\r\nclass Dep {\r\n    constructor() {\r\n        this.id = id++ //属性的dep收集watcher\r\n        this.subs = [] //存放属性对应的watcher有哪些\r\n    }\r\n    depend() {\r\n        // 不希望重复记录watcher\r\n        Dep.target.addDep(this) //让watcher记住dep\r\n\r\n        // dep和watcher是一个多对多关系\r\n    }\r\n    addSub(watcher) {\r\n        this.subs.push(watcher)\r\n    }\r\n    notify() {\r\n        this.subs.forEach(watcher => watcher.update()) //告诉watcher要更新了\r\n    }\r\n}\r\n\r\n// 对外暴露全局变量,可以让响应式数据收集watcher.\r\nDep.target = null\r\nlet stack = []\r\nexport function pushTarget(watcher){ \r\n    stack.push(watcher)\r\n    Dep.target = watcher\r\n} \r\nexport function popTarget(watcher){\r\n    stack.pop()\r\n     Dep.target = stack[stack.length - 1]\r\n}\r\n\r\n\r\nexport default Dep;","// 我们希望重写数组上的方法\r\n\r\n\r\n\r\nlet oldArrayProto = Array.prototype //获取数组的原型,其实是保留数组其他方法\r\n\r\nexport let newArrayProto = Object.create(oldArrayProto)\r\n\r\nlet methods = [\r\n    'push',\r\n    'pop',\r\n    'shift',\r\n    'unshift',  \r\n    'reverse',\r\n    'sort',\r\n    'splice',\r\n]\r\n\r\nmethods.forEach((method) => {\r\n    newArrayProto[method] = function (...args) { //这里重写了数组的方法\r\n        // console.log(method);\r\n        const result = oldArrayProto[method].call(this, ...args) //内部调用原来的方法\r\n        let inserted ;\r\n        let ob = this.__ob__;\r\n        switch(method){\r\n            case 'push' :\r\n            case 'unshift' :\r\n                inserted = args\r\n                break;\r\n            case 'splice' :\r\n                inserted = args.slice(2)\r\n            default:\r\n                break;\r\n        }\r\n        if(inserted){\r\n            ob.observeArray(inserted); // 对新加入的值作响应式监听.\r\n        }\r\n\r\n        ob.dep.notify(); //数组变化了,通知对应的watcher实现更新逻辑\r\n        return result\r\n    }\r\n})\r\n// console.log(newArrayProto);","import { newArrayProto } from \"./array\"\r\nimport Dep from \"./dep\"\r\n\r\nclass Observer {\r\n    constructor(data) {\r\n        // 这个data可能是数组也可能是对象.\r\n        // 给每个对象添加收集功能\r\n        this.dep = new Dep()\r\n\r\n        // Object,defineProperty只能劫持已经存在的属性\r\n        Object.defineProperty(data, '__ob__', {//给数据添加了一个标识,如果数据上有_ob_说明这个数据被观测过了\r\n            value: this,\r\n            enumerable: false,//将下划线ob变成不可枚举(循环时候无法获取)\r\n        })\r\n        // data._ob_ = this;\r\n        if (Array.isArray(data)) { //如果代理的数据是数组,不能给数组每一个索引都作响应式,很少有arr[876]这样的需求,只对数组方法里面做响应式,还有数组里面的对象作响应式\r\n            data.__proto__ = newArrayProto //保留数组原有的特性,并且可以重写部分方法\r\n            this.observeArray(data) //如果数组中存放的是对象,可以监测到对象的变化\r\n        } else {\r\n            this.walk(data)\r\n        }\r\n    }\r\n    walk(data) { // 循环对象,对属性依次劫持\r\n        Object.keys(data).forEach(key => defineReactive(data, key, data[key]))\r\n    }\r\n    observeArray(data) {\r\n        data.forEach(item => observe(item)) //把数组里的对象都变成响应式\r\n    }\r\n}\r\n// 如果对象某个属性值是数组的话,这整个数组也要被依赖收集.并防止嵌套,会循环收集.\r\nfunction dependArray(value) {\r\n    for (let i = 0; i < value.length; i++) {\r\n        let current = value[i]\r\n        value.__ob__.dep.depend()\r\n        if (Array.isArray(current)) {\r\n            dependArray(current)\r\n        }\r\n    }\r\n}\r\n\r\n// !!!最终定义对象属性为响应式的方法!!!:get里依赖收集,借助了dep.set里依赖追踪\r\nexport function defineReactive(target, key, value) { //闭包 属性劫持\r\n    let childOb = observe(value) //递归,值是对象,也对对象内部的值做劫持 childOb用来收集依赖.(只有对象在observe中才会有返回值)\r\n    let dep = new Dep() //每一个属性都有dep,因为闭包.注意!!!是因为闭包有dep属性,而不是dep在属性上!!!\r\n    Object.defineProperty(target, key, {\r\n        // ***在数据的get方法进行依赖收集,访问了数据===>组件依赖这些数据***\r\n        get() {\r\n            if (Dep.target) {\r\n                dep.depend();//让这个属性记住当前的watcher\r\n                if (childOb) {\r\n                    childOb.dep.depend() //让数组和对象本身也实现依赖收集,数组会在变异方法被调用时候触发更新,对象是$set方法时候触发更新.\r\n                    if (Array.isArray(value)) {\r\n                        dependArray(value)\r\n                    }   \r\n                }\r\n            }\r\n            return value\r\n        },\r\n        // ***在数据的set方法进行依赖追踪,数据修改===>组件更新***\r\n        set(newValue) {\r\n            if (newValue === value) return\r\n            observe(newValue)\r\n            value = newValue\r\n            dep.notify() //通知更新\r\n        }\r\n    })\r\n}\r\n\r\nexport function observe(data) {\r\n    // 对这个对象劫持\r\n    if (typeof data !== 'object' || data === null) {\r\n        return; //只对对象劫持\r\n    }\r\n    if (data.__ob__ instanceof Observer) {//说明这个对象被代理过了\r\n        return data.__ob__\r\n    }\r\n    return new Observer(data);\r\n}\r\n\r\n/**\r\n * 1.对象里面的对象默认全都为响应式.因为defineReactive循环调用observe.同时这个子对象改变也会触发childOb.dep.depend()\r\n * 数组里面的对象也会监听,数组调用observeArray\r\n * 2. 对象里面的数组,\r\n * 数组里面的数组都会经过Array.isArray(value)判断\r\n * */\r\n\r\n","import  { popTarget, pushTarget } from \"./dep\";\r\n/**\r\n * 每个组件对应一个watcher,页面渲染的逻辑放到watcher里\r\n * 每个属性有一个dep (属性是被观察者), watcher是观察者(属性变化了会通知观察者来更新)\r\n * \r\n * 需要给每个数据增加一个dep,目的就是收集watcher\r\n    一个组件有多个数据(n个数据对应一个视图) n个dep对应一个watcher\r\n    一个数据对应多个组件\r\n    多对多 \r\n * */\r\n\r\n\r\n/**\r\n *  nextTick原理???\r\n * 1.数据更新后不会立刻更新页面,而是异步更新.\r\n * 2.数据更新会触发依赖这个数据的组件的watcher进行更新,会用一个队列缓冲一个事件循环中所有变更的数据,保存对应的watcher\r\n * 3.nexttick会把队列中watcher的更新操作放到异步任务中,采用了优雅降级的方式,\r\n * 原生的Promise.then、MutationObserver和setImmediate，上述三个都不支持最后使用setTimeout\r\n * 4.异步任务执行完后,清空队列.如果要在页面更新后访问DOM的话,也要用nextTick方法,相当于在watcher更新的异步任务后面排一个异步任务\r\n * \r\n * */\r\nlet id = 0\r\n\r\n\r\n\r\n\r\nclass Watcher { //不同组件有不同的watcher\r\n    constructor(vm, exprOrFn, options,cb) {\r\n        this.id = id++\r\n        this.renderWatcher = options //是一个渲染过程\r\n        if(typeof exprOrFn ==='string'){\r\n            this.getter = function(){\r\n                return vm[exprOrFn] // 侦听器watch中\r\n            }\r\n        }else{\r\n            this.getter = exprOrFn; //getter意味着调用这个函数可以发生取值操作\r\n        }\r\n        this.deps = []; // 存储当前组件包含的依赖.    后续 我们实现计算属性,和一些清理工作需要\r\n        this.depsId = new Set();\r\n        this.vm = vm\r\n        this.user = options.user;//标识是否是用户自己的watcher\r\n        this.cb = cb\r\n\r\n\r\n        this.lazy = options.lazy //***lazy这个变量***只控制计算属性默认不加载,计算属性才会传,没传就是组件\r\n        this.dirty = this.lazy //dirty判断是否重新求值(默认为true)\r\n        // 不要立刻执行,懒执行\r\n        this.value = this.lazy ? undefined : this.get()\r\n    }\r\n    addDep(dep) { //   addDep就是发布订阅里面的!!!订阅!!!           一个组件对应多个属性 重复的属性也不用记录\r\n        let id = dep.id\r\n        if (!this.depsId.has(id)) {\r\n            this.deps.push(dep)\r\n            this.depsId.add(id)\r\n            dep.addSub(this) //watcher已经记住dep并且去重,此时让dep记住watcher\r\n        }\r\n    }\r\n    evaluate() {\r\n        this.value = this.get() //计算属性:调用用户传入的get,将值保存在value中,更新数据为不脏的(不用再运行求值的)\r\n        this.dirty = false\r\n    }\r\n    get() {\r\n        // 用不到的数据就不会收集\r\n        pushTarget(this)  //创建watcher时候就会把当前渲染组件的watcher放在全局上,组件渲染会访问数据,数据里get方法会把把该组件添加到自己的dep中\r\n        let value = this.getter.call(this.vm) //会去vm上取值 vm._update(vm._render) 取name 和age. 计算属性里面依赖的数据被取值后,会把计算属性的watcher放入自己队列中\r\n        popTarget(this) // 渲染完之后清空\r\n        return value\r\n    }\r\n    update() {\r\n        if (this.lazy) {\r\n            // 如果是计算属性依赖的值变化(lazy标明这是计算属性watcher) 就标识计算属性是脏值\r\n            this.dirty = true\r\n        } else {\r\n            queueWatcher(this) //把当前watcher暂存,避免一个数据修改就更新整个页面\r\n        }\r\n    }\r\n    run() {\r\n        let oldValue = this.value\r\n        let newValue = this.get()\r\n        if(this.user){ // 如果是监听器,!同步!执行传入的回调函数.\r\n            this.cb.call(this.vm,newValue,oldValue)\r\n        }\r\n    }\r\n    depend() {\r\n        let i = this.deps.length;\r\n        while (i--) {\r\n        // 计算属性里面的属性的dep的depend\r\n            this.deps[i].depend() //让计算属性watcher也收集渲染watcher\r\n        }\r\n    }\r\n}\r\n\r\nlet queue = []\r\nlet has = {} //用对象去重watcher\r\nlet pending = false //防抖\r\n\r\nfunction flushSchedulerQueue() {\r\n    let flushQueue = queue.slice(0);\r\n    queue = [];\r\n    has = {};\r\n    pending = false; // 异步任务中执行当前函数才会把pending设置为true,pending为true才能把下一次更新推到异步任务中.\r\n    flushQueue.forEach(q => q.run()); // 在刷新的过程中可能还有新的watcher，重新放到queue中\r\n}\r\n\r\nfunction queueWatcher(watcher) {\r\n    const id = watcher.id\r\n    if (!has[id]) {\r\n        queue.push(watcher)\r\n        has[id] = true\r\n        // 不管update执行多少次,但是最终只刷新一轮\r\n        if (!pending) {\r\n            nextTick(flushSchedulerQueue, 0) //同步任务里面最后一次赋值(同步前面可能赋值多次)后,异步任务再执行更新,所以是批处理\r\n            pending = true\r\n        }\r\n    }\r\n}\r\n// 又来一次这种方法,多个执行合成一个:一个变量,开个异步\r\n// 控制更新顺序\r\nlet callbacks = []\r\nlet waiting = false //如果已经有任务推到异步任务中,不再推送.\r\nfunction flushCallbacks() {\r\n    let cbs = callbacks.slice(0)\r\n    waiting = false\r\n    callbacks = []\r\n    cbs.forEach(cb => cb())\r\n}\r\n// nextTick不是创建了异步任务,而是将异步任务维护到队列中\r\nexport function nextTick(cb) {\r\n    callbacks.push(cb) //可能还有用户写的nextTick\r\n    if (!waiting) {\r\n        Promise.resolve().then(flushCallbacks)\r\n        waiting = true\r\n    }\r\n}\r\n\r\n// 同步任务,一次事件循环时候尽管推入,只要异步没执行都可以推入! waiting,pendng为true不会阻止同步推入,只是确保只有一个异步任务.\r\n\r\nexport default Watcher\r\n\r\n","import Dep from './observe/dep.js';\r\nimport { observe } from './observe/index.js'\r\nimport Watcher, { nextTick } from './observe/watcher.js';\r\nexport function initState(vm) {\r\n    const opts = vm.$options;\r\n    if (opts.data) {\r\n        initData(vm);\r\n    }\r\n    if (opts.computed) {\r\n        initComputed(vm)\r\n    }\r\n    if (opts.watch) {\r\n        initWatch(vm)\r\n    }\r\n}\r\n\r\nfunction initWatch(vm) {\r\n    let watch = vm.$options.watch;\r\n    for (let key in watch) {\r\n        const handler = watch[key]//字符串 数组 函数\r\n        if (Array.isArray(handler)) { // 多个监听函数\r\n            for (let i = 0; i < handler.length; i++) {\r\n                createWatcher(vm, key,handler[i])\r\n            }\r\n        }else{\r\n            createWatcher(vm, key,handler)\r\n        }\r\n    }\r\n}\r\n\r\nfunction createWatcher(vm, key,handler) {\r\n    //字符串 函数 (对象不考虑)\r\n    if(typeof handler === 'string'){\r\n        handler = vm[handler]\r\n    }\r\n    return vm.$watch(key,handler)\r\n}\r\n\r\n// 数据代理:  解决访问vm属性要vm_data.name这种写法,直接vm.name\r\nfunction proxy(vm, target, key) {\r\n    Object.defineProperty(vm, key, { //vm.name\r\n        get() {\r\n            return vm[target][key] //vm._data.name\r\n        },\r\n        set(newValue) {\r\n            vm[target][key] = newValue\r\n        }\r\n    })\r\n}\r\n\r\nfunction initData(vm) {\r\n    let data = vm.$options.data; //data可能是函数,也可能是对象\r\n    typeof data === 'function' ? data.call(vm) : data //data是用户返回的对象\r\n\r\n    vm._data = data //将返回的对象放到了_data上\r\n    // 对数据进行劫持 vue2里采用了一个api defineProperty\r\n    observe(data)\r\n\r\n    for (let key in data) {\r\n        proxy(vm, '_data', key)\r\n    }\r\n}\r\n\r\nfunction initComputed(vm) {\r\n    const computed = vm.$options.computed; //获取用户传入的computed\r\n    let watchers = vm._computedWachers = {} //将计算属性watcher保存到vm,因为后续还要访问属性的watcher\r\n    for (let key in computed) {\r\n        let userDef = computed[key]\r\n        // 需要监控 计算属性中get的变化\r\n        let fn = typeof userDef === 'function' ? userDef : userDef.get\r\n\r\n        // 每一个计算属性创建一个watcher,fn不立刻执行(lazy为true),并将所有属性watcher放到对象中,对象放到组件实例上\r\n        watchers[key] = new Watcher(vm, fn, { lazy: true }) //第一次设置为true,不会立即执行计算\r\n        defineComputed(vm, key, userDef) //是vm,模板解析计算属性时候还是去实例身上取值,所以要把值defineProperty到vm上\r\n    }\r\n}\r\n\r\nfunction defineComputed(target, key, userDef) {\r\n    const setter = userDef.set || (() => { })\r\n    Object.defineProperty(target, key, {\r\n        get: createComputedGetter(key),\r\n        set: setter\r\n    })\r\n}\r\n\r\n// 计算属性不会收集依赖,只会让自己的依赖属性去收集依赖\r\nfunction createComputedGetter(key) {//计算属性的getter方法\r\n    // 我们要检测是否要执行这个getter\r\n    return function () {\r\n        const watcher = this._computedWachers[key] //获取到对应属性的watcher\r\n        if (watcher.dirty) {//如果是脏,就去执行用户传入的参数\r\n            watcher.evaluate() //求值后dirty变为false,下次就用缓存的值\r\n        }\r\n        if (Dep.target) { //计算属性watcher出栈后 计算属性里面的属性还要上一层让渲染watcher更新\r\n            watcher.depend()\r\n        }\r\n        return watcher.value\r\n    }\r\n}\r\n\r\nexport function initStateMixin(Vue){\r\n    Vue.prototype.$nextTick = nextTick\r\n    Vue.prototype.$watch = function (exprOrFn, cb, options = {}) {\r\n        // firstname值变化,执行cb函数即可\r\n        new Watcher(this, exprOrFn,{user:true},cb)\r\n    }\r\n    \r\n}","/**\r\n * \r\n * 这个文件夹***生成AST语法树***\r\n * \r\n * \r\n * 1.   获取模板字符串后,从头到尾先解析开始标签,获得其标签名,属性,和结束标签和标签文本内容.模板字符串不断裁剪到为空.\r\n * 2.   根据开始标签,文本,结束标签创建AST节点,注意根节点的判断,以及父子节点关系,通过一个栈数据结构和全局变量判断父子节点\r\n * 3.   开始标签会进栈,结束标签出栈,文本会直接作为当前父节点的属性,栈结尾的元素即为当前的要进栈元素的***父节点***\r\n * 4.   最终形成AST语法树.每一层是一个节点,有父节点,子节点,和自身属性.\r\n * \r\n * */ \r\n\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 他匹配到的分组是一个 标签名  <xxx 匹配到的是开始 标签的名字\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`);  // 匹配的是</xxxx>  最终匹配到的分组就是结束标签的名字\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;  // 匹配属性\r\n// 第一个分组就是属性的key value 就是 分组3/分组4/分组五\r\nconst startTagClose = /^\\s*(\\/?)>/;  // <div> <br/>\r\n\r\n// vue3 采用的不是使用正则\r\n// 对模板进行编译处理  \r\nexport function parseHTML(html) {\r\n\r\n    const ELEMENT_TYPE = 1;\r\n    const TEXT_TYPE = 3;\r\n    const stack = []; // 用于存放元素的\r\n    let currentParent; // 指向的是栈中的最后一个,当前元素的父节点\r\n    let root; // 根节点\r\n\r\n    function createASTElement(tag, attrs) {\r\n        return {\r\n            tag,\r\n            type: ELEMENT_TYPE,\r\n            children:[],\r\n            attrs,\r\n            parent: null\r\n        }\r\n    }\r\n\r\n    function start(tag, attrs) {\r\n        let node = createASTElement(tag, attrs) //创建一个ast节点\r\n        if (!root) { //没有根节点,当前元素就是根节点\r\n            root = node\r\n        }\r\n        if (currentParent) {\r\n            node.parent = currentParent //子知父\r\n            currentParent.children.push(node) //父知子\r\n        }\r\n        stack.push(node)\r\n        currentParent = node //父节点为栈中最后一个元素\r\n    }\r\n\r\n    function chars(text) { //文本放到当前指向的节点\r\n        text = text.replace(/\\s/g,''); \r\n        text && currentParent.children.push({\r\n            type: TEXT_TYPE,\r\n            text,\r\n            parent:currentParent\r\n        })\r\n    }\r\n\r\n    function end(tag) {\r\n        stack.pop() //弹出最后一个\r\n        currentParent = stack[stack.length - 1]\r\n\r\n    }\r\n\r\n    // 模板解析完多少,就前进多少\r\n    function advance(n) {\r\n        html = html.substring(n)\r\n    }\r\n\r\n    // 解析开始标签及其里面的属性\r\n    function parseStartTag() {\r\n        const start = html.match(startTagOpen)\r\n        // 1.匹配到开始标签\r\n        if (start) {\r\n            const match = {\r\n                tagName: start[1], //标签名\r\n                attrs: []\r\n            }\r\n            advance(start[0].length);\r\n            // 2.如果不是开始标签的结束,就一直匹配属性,把属性值放入match.attrs中\r\n            let attr, end;\r\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n                advance(attr[0].length)\r\n                match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] } || true)\r\n            }\r\n            // 3.匹配到结束符号\r\n            if (end) {\r\n                advance(end[0].length)\r\n            }\r\n            return match\r\n        }\r\n        return false //不是开始标签\r\n    }\r\n\r\n\r\n    while (html) {\r\n        // 如果textEnd 为0 说明是一个开始标签或者结束标签\r\n        // 如果textEnd > 0说明就是文本的结束位置\r\n        let textEnd = html.indexOf('<');  // 如果indexOf中的索引是0 则说明是个标签\r\n        if (textEnd === 0) {\r\n            const startTagMatch = parseStartTag() //开始标签的匹配\r\n            if (startTagMatch) {\r\n                start(startTagMatch.tagName, startTagMatch.attrs)\r\n                continue\r\n            }\r\n            let endTagMatch = html.match(endTag)\r\n            if (endTagMatch) {                    //结束标签的匹配\r\n                end(endTagMatch[1])\r\n                advance(endTagMatch[0].length)\r\n                continue\r\n            }\r\n\r\n        }\r\n        if (textEnd > 0) {\r\n            let text = html.substring(0, textEnd) //文本内容的匹配\r\n            if (text) {\r\n                chars(text)\r\n                advance(text.length) //解析到的文本\r\n            }\r\n        }\r\n    }\r\n    return root;\r\n}","import { parseHTML } from \"./parse\";\r\n/**\r\n * \r\n * \r\n * \r\n * \r\n * compileToFunction传入一个模板,将模板变为AST语法树,AST语法树代码生成渲染函数\r\n * \r\n * \r\n * \r\n * \r\n * */ \r\nfunction genProps(attrs) {\r\n    let str = ''// {name,value}\r\n    for (let i = 0; i < attrs.length; i++) {\r\n        let attr = attrs[i];\r\n        if (attr.name === 'style') {\r\n            // color:red;background:red => {color:'red'}\r\n            let obj = {};\r\n            attr.value.split(';').forEach(item => { // qs 库\r\n                let [key, value] = item.split(':');\r\n                obj[key] = value;\r\n            });\r\n            attr.value = obj\r\n        }\r\n        str += `${attr.name}:${JSON.stringify(attr.value)},` // a:b,c:d,\r\n    }\r\n    return `{${str.slice(0, -1)}}`\r\n}\r\n\r\n\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; // {{ asdsadsa }}  匹配到的内容就是我们表达式的变量\r\nfunction gen(node) {\r\n    if (node.type === 1) {\r\n        return codegen(node);\r\n    } else {\r\n        // 文本\r\n        let text = node.text\r\n        if (!defaultTagRE.test(text)) {\r\n            return `_v(${JSON.stringify(text)})`\r\n        } else {\r\n            //_v( _s(name)+'hello' + _s(name))\r\n            let tokens = [];\r\n            let match;\r\n            defaultTagRE.lastIndex = 0;\r\n            let lastIndex = 0;\r\n            // split\r\n            while (match = defaultTagRE.exec(text)) {\r\n                let index = match.index; // 匹配的位置  {{name}} hello  {{name}} hello \r\n                if (index > lastIndex) {\r\n                    tokens.push(JSON.stringify(text.slice(lastIndex, index)))\r\n                }\r\n                tokens.push(`_s(${match[1].trim()})`)\r\n                lastIndex = index + match[0].length\r\n            }\r\n            if (lastIndex < text.length) {\r\n                tokens.push(JSON.stringify(text.slice(lastIndex)))\r\n            }\r\n            return `_v(${tokens.join('+')})`\r\n        }\r\n    }\r\n}\r\nfunction genChildren(children) {\r\n    return children.map(child => gen(child)).join(',')\r\n}\r\nfunction codegen(ast) {\r\n    let children = genChildren(ast.children);\r\n    let code = (`_c('${ast.tag}',${ast.attrs.length > 0 ? genProps(ast.attrs) : 'null'\r\n        }${ast.children.length ? `,${children}` : ''\r\n        })`)\r\n\r\n    return code;\r\n}\r\n\r\n// compileToFunction作用:把模板变成渲染函数函数.\r\nexport function compileToFunction(template) {\r\n\r\n    // 1.将template转换为AST语法树\r\n    let ast = parseHTML(template)\r\n    \r\n    // 2.生成render方法(render方法`执行`后返回的是虚拟DOM)\r\n    let code = codegen(ast);\r\n\r\n    // 模板引擎的实现原理 就是 with  + new Function\r\n\r\n\r\n    code = `with(this){return ${code}}`\r\n    const render = new Function(code)\r\n    return render\r\n}","/**\r\n * 这个文件是渲染函数render执行时候创建虚拟节点\r\n * */ \r\n\r\nconst isReservedTag = (tag) =>{\r\n    return ['a','div','p','button','ul','li','span'].includes(tag)\r\n}\r\n    // h函数就是底层的_c函数.\r\n    // !!!h()!!!  _c()\r\n    export function createElementVNode(vm, tag, data, ...children) { //创建元素虚拟节点\r\n        if (data == null) {\r\n            data = {}\r\n        }\r\n        let key = data.key;\r\n        if (key) {\r\n            delete data.key // 因为key只是vue底层用来对比新旧虚拟节点是否相同.真实dom不会有这玩意\r\n        }\r\n        if(isReservedTag(tag)){ // 是原生html的节点\r\n        return vnode(vm, tag, key, data, children);\r\n    }else{\r\n        // 创建一个组件的虚拟节点(包含组件的构造函数)\r\n        let Ctor = vm.$options.components[tag] // !!!组件的构造函数!!!\r\n\r\n        // Ctor就是组件的定义,可能是一个Sub类,还有可能是组件的选项\r\n        return createComponentVnode(vm,tag,key,data,children,Ctor)\r\n    }\r\n}\r\n\r\nfunction createComponentVnode(vm,tag,key,data,children,Ctor){\r\n    if(typeof Ctor === 'object'){ // 在components (注意s)里面写的组件,是一个对象.\r\n        Ctor = vm.$options._base.extend(Ctor) // _base就是Vue构造函数.\r\n    }\r\n    data.hook = { //创建真实节点时候,如果是组件则调用此init方法.\r\n        init(vnode){\r\n            // 保存组件实例到虚拟节点上\r\n           let instance = vnode.componentInstance = new vnode.componentOptions.Ctor\r\n           instance.$mount() //instance.$el\r\n        }\r\n    }\r\n    return vnode(vm,tag,key,data,children,null,{Ctor})\r\n}\r\n\r\n\r\n\r\n// _v();\r\nexport function createTextVNode(vm, text) { //创建文本虚拟节点\r\n    return vnode(vm, undefined, undefined, undefined, undefined, text);\r\n}\r\n// ast一样吗？ ast做的是语法层面的转化 他描述的是语法本身 (可以描述js css html)\r\n// 我们的虚拟dom 是描述的dom元素，可以增加一些自定义属性  (描述dom的)\r\nfunction vnode(vm, tag, key, data, children, text,componentOptions) {\r\n    return {\r\n        vm,\r\n        tag,\r\n        key,\r\n        data,\r\n        children,\r\n        text,\r\n        componentOptions // 组件的虚拟节点包括了组件的构造函数.\r\n        // ....\r\n    }\r\n}\r\n\r\n// 判断两个虚拟节点是否相同\r\nexport function isSameVnode(vnode1,vnode2){\r\n    return vnode1.tag === vnode2.tag && vnode1.key === vnode2.key; // 没有key则key值是undefined,也认为是同节点\r\n}","import { isSameVnode } from \".\";\r\n\r\nfunction createComponent(vnode){ //组件\r\n    let i = vnode.data\r\n    if((i = i.hook) && (i = i.init)){\r\n        i(vnode) //初始化组件,找到init方法\r\n    }\r\n    if(vnode.componentInstance) return true //说明是组件\r\n}\r\n\r\n// 创建真实DOM\r\nexport function createElm(vnode) {\r\n    let { tag, data, children, text } = vnode;\r\n    if (typeof tag == 'string') { //元素节点\r\n\r\n\r\n\r\n        // 创建真实元素 也要区分是组件还是元素\r\n        if(createComponent(vnode)){ //组件 vnode.componentInstance.$el\r\n            return vnode.componentInstance.$el // vm.$el 对应的就是组件渲染的结果\r\n        }\r\n\r\n\r\n        vnode.el = document.createElement(tag)\r\n        patchProps(vnode.el, {}, data);\r\n        children.forEach(child => {\r\n            vnode.el.appendChild(createElm(child))\r\n        });\r\n    } else { //文本节点\r\n        vnode.el = document.createTextNode(text)\r\n    }\r\n    return vnode.el;\r\n}\r\n\r\n// 创建真实DOM中的元素节点时候添加元素属性\r\nexport function patchProps(el, oldProps = {}, props = {}) {\r\n    // 老的属性中有,新的没有,要删除老的\r\n    let oldStyles = oldProps.style || {}\r\n    let newStyles = props.style || {}\r\n    for (let key in oldStyles) { //老的样式有,新没有则删除\r\n        if (!newStyles[key]) {\r\n            el.style[key] = ''\r\n        }\r\n    }\r\n    for (let key in oldProps) { //老的属性有,新没有则删除\r\n        if (!props[key]) {\r\n            el.removeAttribute(key)\r\n        }\r\n    }\r\n\r\n    for (let key in props) { // 把新的属性全部放上去\r\n        if (key === 'style') {\r\n            for (let styleName in props.style) {\r\n                el.style[styleName] = props.style[styleName]\r\n            }\r\n        } else {\r\n            el.setAttribute(key, props[key])\r\n        }\r\n    }\r\n}\r\n\r\n// 写的是渲染过程,把真实DOM放到页面中了,并且返回新创建的真实DOM\r\nexport function patch(oldVnode, vnode) {\r\n\r\n\r\n    if(!oldVnode){ //这就是组件的挂载\r\n        return createElm(vnode) //vm.$el 对应的是组件渲染的结果.\r\n    }\r\n\r\n\r\n\r\n\r\n    const isRealElement = oldVnode.nodeType // nodeType属性是节点原生属性.\r\n    if (isRealElement) {\r\n        const elm = oldVnode; //获取真实DOM\r\n        const parentElm = elm.parentNode //拿到父元素\r\n        const newElm = createElm(vnode) //创建新DOM\r\n        parentElm.insertBefore(newElm, elm.nextSibling) //替换\r\n        parentElm.removeChild(elm) //删除老节点\r\n        return newElm\r\n    } else {\r\n        /**\r\n         * diff算法\r\n         * 1. 两个节点不是同一个节点 直接删除老的换上新的\r\n         * 2. 两个节点是同一个节点(判断节点的tag和key) 比较两个节点的属性是否有异同(复用老的节点,将新的属性更新)\r\n         * 3. 节点比较完比较两个人儿子\r\n         * */\r\n        return patchVnode(oldVnode, vnode)\r\n    }\r\n}\r\n\r\n// diff算法比较两个节点\r\nfunction patchVnode(oldVnode, vnode) {\r\n    // 不是相同节点直接替换\r\n    if (!isSameVnode(oldVnode, vnode)) {\r\n        let el = createElm(vnode)\r\n        oldVnode.el.parentNode.replaceChild(el, oldVnode.el) // 用老节点的父亲替换\r\n        return el;\r\n    }\r\n    // 是相同节点\r\n    let el = vnode.el = oldVnode.el // 复用老节点的真实DOM元素\r\n    if (!oldVnode.tag) { //是文本\r\n        if (oldVnode.text !== vnode.text) {\r\n            el.textContent = vnode.text //用新文本覆盖老的\r\n        }\r\n    }\r\n    // 是标签 是标签我们需要对比标签的属性\r\n    patchProps(el, oldVnode.data, vnode.data)\r\n\r\n    // 比较儿子节点 比较时候 一方有儿子,一方没儿子\r\n    // 两方都有儿子\r\n\r\n    let oldChildren = oldVnode.children || {}\r\n    let newChildren = vnode.children || {}\r\n\r\n\r\n    if (oldChildren.length > 0 && newChildren.length > 0) {\r\n        // 完整的diff算法,比较两个的儿子\r\n        updateChildren(el, oldChildren, newChildren);\r\n    } else if (newChildren.length > 0) { //没有老的,有新的\r\n        mountChildren(el, newChildren)\r\n    } else if (oldChildren.length > 0) { //没有新的,有老的\r\n        el.innerHTML = '' //可以循环删除\r\n    }\r\n    return el\r\n}\r\n\r\n// 新的子节点全部添加到el中\r\nfunction mountChildren(el, newChildren) {\r\n    for (let i = 0; i < newChildren.length; i++) {\r\n        el.appendChild(createElm(child))\r\n    }\r\n}\r\n\r\nfunction updateChildren(el, oldChildren, newChildren) {\r\n    // vue2采用双指针方式比较两个节点 \r\n    let oldStartIndex = 0\r\n    let newStartIndex = 0\r\n    let oldEndIndex = oldChildren.length - 1\r\n    let newEndIndex = newChildren.length - 1\r\n\r\n    let oldStartVnode = oldChildren[0]\r\n    let newStartVnode = newChildren[0]\r\n    let oldEndVnode = oldChildren[oldEndIndex]\r\n    let newEndVnode = newChildren[newEndIndex]\r\n\r\n    function makeIndexByKey(children) {\r\n        let map = {\r\n\r\n        }\r\n        children.forEach((child, index) => {\r\n            map[child.key] = index;\r\n        })\r\n        return map\r\n    }\r\n\r\n    let map = makeIndexByKey(oldChildren)\r\n    while (oldStartIndex <= oldEndIndex && newStartIndex <= newEndIndex) {// 双方有一方头指针大于尾部指针则停止循环(大于)\r\n        // 为空则往后移动\r\n        if (!oldStartVnode) {\r\n            oldStartVnode = oldChildren[++oldStartIndex]\r\n        } else if (!oldEndVnode) {\r\n            oldEndVnode = oldChildren[--oldEndIndex]\r\n        }\r\n        // 比较头指针\r\n        else if (isSameVnode(oldStartVnode, newStartVnode)) {\r\n            patchVnode(oldStartVnode, newStartVnode) //如果是相同节点,递归比较子节点\r\n            oldStartVnode = oldChildren[++oldStartIndex]\r\n            newStartVnode = newChildren[++newStartIndex]\r\n        }\r\n        // 比较尾指针\r\n        else if (isSameVnode(oldEndVnode, newEndVnode)) {\r\n            patchVnode(oldEndVnode, newEndVnode) //如果是相同节点,递归比较子节点\r\n            oldEndVnode = oldChildren[--oldEndIndex]\r\n            newEndVnode = newChildren[--newEndIndex]\r\n        }\r\n        // 交叉对比, abcd ->dabc\r\n        else if (isSameVnode(oldEndVnode, newStartVnode)) {\r\n            patchVnode(oldEndVnode, newStartVnode);\r\n            el.insertBefore(oldEndVnode.el, oldStartVnode.el) //将老的尾巴移动到老的前面\r\n            oldEndVnode = oldChildren[--oldEndIndex]\r\n            newStartVnode = newChildren[++newStartIndex]\r\n        }\r\n        // 交叉对比, abcd ->bcda\r\n        else if (isSameVnode(oldStartVnode, newEndVnode)) {\r\n            patchVnode(oldStartVnode, newEndVnode);\r\n            el.insertBefore(oldStartVnode.el, oldEndVnode.el.nextSibling) //将老的尾巴移动到老的前面\r\n            oldStartVnode = oldChildren[++oldStartIndex]\r\n            newEndVnode = newChildren[--newEndIndex]\r\n        } else {\r\n            // 乱序比对\r\n            // 根据老的列表做一个映射关系,用新的去找,找到则移动,找不到则删除,最后多余的删除.\r\n            let moveIndex = map[newStartVnode.key]\r\n            if (moveIndex !== undefined) { //如果老节点中有新节点\r\n                let moveVnode = oldChildren[moveIndex]\r\n                el.insertBefore(moveVnode.el, oldStartVnode.el)\r\n                oldChildren[moveIndex] = undefined; //表示这个节点已经移动走了\r\n                patchVnode(moveVnode, newStartVnode);//比对属性和子节点\r\n            } else { // m找不到,直接插入\r\n                el.insertBefore(createElm(newStartVnode), oldStartVnode.el)\r\n            }\r\n            newStartVnode = newChildren[++newStartIndex] //往后移动新指针\r\n        }\r\n    }\r\n    if (newStartIndex <= newEndIndex) { //多余的新子节点放入\r\n        console.log();\r\n        for (let i = newStartIndex; i <= newEndIndex; i++) {\r\n            // 可能向后追加,也可能向前追加.\r\n            let childElm = createElm(newChildren[i])\r\n            let anchor = newChildren[newEndIndex + 1] ? newChildren[newEndIndex + 1].el : null //获取下一个元素.(为什么有下一个节点真实DOM?因为比较过程中复用了)\r\n            el.insertBefore(childElm, anchor) //anchor为null时候会认为是appendChild\r\n        }\r\n    }\r\n    if (oldStartIndex <= oldEndIndex) { //多余的老子节点删除\r\n        for (let i = oldStartIndex; i <= oldEndIndex; i++) {\r\n            if (oldChildren[i]) {\r\n                el.removeChild(oldChildren[i].el);\r\n            }\r\n        }\r\n    }\r\n}","import Watcher from \"./observe/watcher\";\nimport { createElementVNode, createTextVNode } from \"./vdom\";\nimport { patch } from \"./vdom/patch\";\n\n\nexport function initLifeCycle(Vue) {\n    // 将vnode转化成真实dom\n    Vue.prototype._update = function (vnode) {\n        const vm = this\n        const el = vm.$el\n        const preVnode = vm._vnode\n        vm._vnode = vnode //把组件第一次产生的虚拟节点保存到_vnode上 \n        if(preVnode){ // 之前渲染过\n            vm.$el = patch(preVnode,vnode)\n        }else{ //之前没渲染过,传入真实DOM,在patch里面会直接创建新的虚拟ODM\n            vm.$el = patch(el, vnode)\n        }\n    }\n\n    // _c('div',{},...children)\n    Vue.prototype._c = function () {\n        return createElementVNode(this, ...arguments)\n    }\n    // _v(text)\n    Vue.prototype._v = function () {\n        return createTextVNode(this, ...arguments)\n    }\n    Vue.prototype._s = function (value) {\n        if (typeof value !== 'object') return value\n        return JSON.stringify(value) //底层的JSON.stringfy返回完整的对象.页面渲染就是完整的对象!\n    }\n\n\n    Vue.prototype._render = function () {\n        // 渲染时候会去实例取值,就将属性和视图绑定在一起\n        return this.$options.render.call(this); // 通过ast语法转义后生成的render方法\n    }\n}\n\n\n\n//挂载\nexport function mountComponent(vm, el) {\n    vm.$el = el // 这里的el 是通过querySelector选择处理过的,我们要挂载到的位置\n\n    // 1.调用render方法产生虚拟节点 虚拟DOM\n    const updateComponent = () => {\n        vm._update(vm._render());\n    }\n    new Watcher(vm, updateComponent, true) //true用于标识是一个渲染watcher\n\n    // 2.根据虚拟DOM产生真实DOM\n\n    // 3.插入到el元素中\n\n}\n// vue核心流程 1） 创造了响应式数据  2） 模板转换成ast语法树  \n// 3) 将ast语法树转换了render函数 4) 后续每次数据更新可以只执行render函数 (无需再次执行ast转化的过程)\n// render函数会去产生虚拟节点（使用响应式数据）\n// 根据生成的虚拟节点创造真实的DOM\n\nexport function callHook(vm, hook) { //调用钩子函数\n    const handlers = vm.$options[hook]\n    if (handlers) {\n        handlers.forEach(handlers => handlers.call(vm))\n    }\n}","import { initState } from './state'\r\nimport { compileToFunction } from './compiler';\r\nimport { callHook, mountComponent } from './lifecycle'\r\nimport { mergeOptions } from './utils';\r\n\r\nexport function initMixin(Vue) { //给Vue添加init方法\r\n    Vue.prototype._init = function (options) { //初始化操作\r\n        const vm = this;\r\n        vm.$options = mergeOptions(this.constructor.options,options); //将用户选项挂载到实例上(mixin方法可能添加了全局的选项)\r\n        // 初始化状态\r\n        callHook(vm,'beforeCreate')\r\n        initState(vm)\r\n        callHook(vm,'created')\r\n        if (options.el) { // 先判断用户有无传入el,传入el的话在new实例化时候会立即进入编辑状态.否则需要$mount手动挂载.\r\n            vm.$mount(options.el) //实现数据的挂载\r\n        }\r\n    }\r\n    Vue.prototype.$mount = function (el) {\r\n        const vm = this\r\n        el = document.querySelector(el)\r\n        let ops = vm.$options\r\n        /**\r\n         * \r\n         * \r\n         * render==>template==>el.outerHTML\r\n         * \r\n         * \r\n         * */ \r\n        if (!ops.render) { //先查找一下有没有写render函数\r\n            let template; //没有render看一下是否写了template,没写template采用外部的template\r\n            if (!ops.template && el) { //没有写template,拿$mount挂载的元素.\r\n                template = el.outerHTML\r\n            } else {\r\n                template = ops.template //写了template\r\n            }\r\n            if (template) { //有模板就挂载\r\n                // 这里需要对模板进行编译,即生成AST树,根据AST树代码生成渲染函数.\r\n                const render = compileToFunction(template);\r\n                ops.render = render\r\n            }\r\n        }\r\n        mountComponent(vm, el); //组件的挂载\r\n\r\n    }\r\n}\r\n","import { initGlobalAPI } from \"./GlobalAPI\";\r\nimport { initMixin } from \"./init\"\r\nimport { initLifeCycle } from \"./lifecycle\";\r\nimport { initStateMixin } from \"./state\";\r\n\r\n\r\n// 根据用户选项创建不同的Vue!还有根据用户选项创建不同的子组件!\r\nfunction Vue(options) { //options就是用户的选项,包括data,computed等等\r\n    this._init(options)\r\n}\r\n\r\ninitMixin(Vue) //给vue对象扩展了init方法\r\ninitLifeCycle(Vue); //添加vue的生命周期\r\ninitGlobalAPI(Vue) // 添加vue的全局方法\r\ninitStateMixin(Vue) //实现了nextTick $watch\r\n\r\nexport default Vue"],"names":["strats","LIFECYCLE","forEach","hook","p","c","concat","components","parentVal","childVal","res","Object","create","key","mergeOptions","parent","child","options","mergeField","hasOwnProperty","initGlobalAPI","Vue","_base","mixin","extend","Sub","arguments","length","undefined","_init","prototype","constructor","component","id","definition","Dep","_classCallCheck","subs","_createClass","value","depend","target","addDep","addSub","watcher","push","notify","update","stack","pushTarget","popTarget","pop","oldArrayProto","Array","newArrayProto","methods","method","_oldArrayProto$method","_len","args","_key","result","call","apply","inserted","ob","__ob__","slice","observeArray","dep","Observer","data","defineProperty","enumerable","isArray","__proto__","walk","keys","defineReactive","item","observe","dependArray","i","current","childOb","get","set","newValue","_typeof","Watcher","vm","exprOrFn","cb","renderWatcher","getter","deps","depsId","Set","user","lazy","dirty","has","add","evaluate","queueWatcher","run","oldValue","queue","pending","flushSchedulerQueue","flushQueue","q","nextTick","callbacks","waiting","flushCallbacks","cbs","Promise","resolve","then","initState","opts","$options","initData","computed","initComputed","watch","initWatch","handler","createWatcher","$watch","proxy","_data","watchers","_computedWachers","userDef","fn","defineComputed","setter","createComputedGetter","initStateMixin","$nextTick","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","currentParent","root","createASTElement","tag","attrs","type","children","start","node","chars","text","replace","end","advance","n","substring","parseStartTag","match","tagName","attr","name","textEnd","indexOf","startTagMatch","endTagMatch","genProps","str","_loop","obj","split","_item$split","_item$split2","_slicedToArray","JSON","stringify","defaultTagRE","gen","codegen","test","tokens","lastIndex","exec","index","trim","join","genChildren","map","ast","code","compileToFunction","template","render","Function","isReservedTag","includes","createElementVNode","vnode","Ctor","createComponentVnode","init","instance","componentInstance","componentOptions","$mount","createTextVNode","isSameVnode","vnode1","vnode2","createComponent","createElm","$el","el","document","createElement","patchProps","appendChild","createTextNode","oldProps","props","oldStyles","style","newStyles","removeAttribute","styleName","setAttribute","patch","oldVnode","isRealElement","nodeType","elm","parentElm","parentNode","newElm","insertBefore","nextSibling","removeChild","patchVnode","replaceChild","textContent","oldChildren","newChildren","updateChildren","mountChildren","innerHTML","oldStartIndex","newStartIndex","oldEndIndex","newEndIndex","oldStartVnode","newStartVnode","oldEndVnode","newEndVnode","makeIndexByKey","moveIndex","moveVnode","console","log","childElm","anchor","initLifeCycle","_update","preVnode","_vnode","_c","_v","_s","_render","mountComponent","updateComponent","callHook","handlers","initMixin","querySelector","ops","outerHTML"],"mappings":"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"}